Avalanche C-chain addresses

Factory: 0xefa94DE7a4656D787667C749f7E1223D71E9FD88

sAVAX: 0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE
WAVAX: 0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7
USDC: 0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E
USDt: 0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7
JOE: 0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd
PNG: 0x60781C2586D68229fde47564546784ab3fACA982

getReserves selector (no arguments): 0x0902f1ac
getPair selector: e6a43905
 - getPair becomes a function that takes two addresses as args
 - each argument (20 byte address/uint160 in this case) is left-padded (high order end) in a 32 byte hex string

SO...

the call to getPair(USDC, WAVAX) looks like:

selector USDC address                                                     WAVAX address
e6a43905 000000000000000000000000B97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E 000000000000000000000000B31f66AA3C1e785363F0875A1B74E27b85FD66c7

I left spaces to make it more human readable
Here it is without spaces:
e6a43905000000000000000000000000B97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E000000000000000000000000B31f66AA3C1e785363F0875A1B74E27b85FD66c7

getReserves' return type is (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast):
0x0000000000000000000000000000000000000000000011b764c7bf16fa1cc9500000000000000000000000000000000000000000000000000000029862bbab930000000000000000000000000000000000000000000000000000000065c1ceae

SO...

_reserve0 is 0x0000000000000000000000000000000000000000000011b764c7bf16fa1cc950 (uint112 at end of first 32 bytes)
_reserve1 is 0x0000000000000000000000000000000000000000000000000000029862bbab93 (uint112 at end of second 32 bytes)



